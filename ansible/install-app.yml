---
- include_vars:
    file: secret-config.yml

- name: Ensure the user exists
  ansible.builtin.user:
    name: "{{ user_name }}"
    home: "{{ user_home }}"
    shell: /bin/bash
    create_home: true
  become: true

- name: Add the user to the docker group
  ansible.builtin.user:
    name: "{{ user_name }}"
    groups: docker
    append: true
  become: true

- name: Ensure the directory exists
  ansible.builtin.file:
    path: "{{ local_checkout_path }}"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '0755'
  become: true

- name: Git stash
  ansible.builtin.command:
    argv:
      - git
      - stash
  args:
    chdir: "{{ local_checkout_path }}"
  become: true
  become_user: "{{ user_name }}"
  ignore_errors: true

- name: Checking out codebase
  git:
    accept_hostkey: "yes"
    repo: https://github.com/FrankApiyo/django-test-api.git
    dest: "{{ local_checkout_path }}"
    version: "{{ git_branch }}"
    depth: 1
    clone: true
  become: true
  become_user: "{{ user_name }}"

- name: Git stash pop
  ansible.builtin.command:
    argv:
      - git
      - stash
      - pop
  args:
    chdir: "{{ local_checkout_path }}"
  become: true
  become_user: "{{ user_name }}"
  ignore_errors: true

- name: Create .env file
  ansible.builtin.template:
    src: .env.j2
    dest: "{{ local_checkout_path }}/.env"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '0644'
  become: true
  become_user: "{{ user_name }}"

- name: Ensure app log file exists
  ansible.builtin.file:
    path: "{{ app_log_path }}"
    state: touch
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '0755'
  become: true

- name: Create django settings file
  ansible.builtin.template:
    src: settings.py.j2
    dest: "{{ local_checkout_path }}/users/settings.py"
    mode: "0644"
  become: true
  become_user: "{{ user_name }}"

- name: Create a systemd service file for Docker Compose
  ansible.builtin.template:
    src: docker-compose.service.j2
    dest: /etc/systemd/system/{{ service_name }}.service
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Reload systemd daemon
  ansible.builtin.command: systemctl daemon-reload
  become: true

- name: Docker compose build
  ansible.builtin.command:
    argv:
      - docker
      - compose
      - build
  args:
    chdir: "{{ local_checkout_path }}"
  become: true
  become_user: "{{ user_name }}"

- name: Docker compose run
  ansible.builtin.command:
    argv:
      - docker
      - compose
      - up
      - -d
  args:
    chdir: "{{ local_checkout_path }}"
  become: true
  become_user: "{{ user_name }}"

- name: Django collectstatic
  ansible.builtin.command:
    argv:
      - docker
      - exec
      - -it
      - dev_users_api
      - python
      - manage.py
      - collectstatic
      - --noinput
  args:
    chdir: "{{ local_checkout_path }}"
  become: true
  become_user: "{{ user_name }}"

- name: Run migrations
  ansible.builtin.command:
    argv:
      - docker
      - exec
      - -it
      - dev_users_api
      - python
      - manage.py
      - migrate
  args:
    chdir: "{{ local_checkout_path }}"
  become: true
  become_user: "{{ user_name }}"

- name: Docker compose down
  ansible.builtin.command:
    argv:
      - docker
      - compose
      - down
  args:
    chdir: "{{ local_checkout_path }}"
  become: true
  become_user: "{{ user_name }}"

- name: Enable and start the Docker Compose service
  ansible.builtin.systemd:
    name: "{{ service_name }}"
    enabled: true
    state: started
  become: true
